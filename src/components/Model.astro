<canvas class="h-screen w-screen" id="3d-canvas"></canvas>

<script>
    import * as THREE from 'three';
    import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';
    import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';
    import { createControl } from '../utils/control';

    const canvas = document.getElementById('3d-canvas');
    const gui = new createControl();

    // 1. Scene
    const scene = new THREE.Scene();
    scene.background = new THREE.Color('#F0F0F0');

    // 2. Camera
    const camera = new THREE.PerspectiveCamera(
        75,
        window.innerWidth / window.innerHeight,
        0.1,
        1000,
    );
    camera.position.set(0, 0, 10);
    gui.addControls('camera', camera);

    // 3. Light
    const light = new THREE.SpotLight('#efefef', 100);
    light.position.set(0, 4, 4);
    scene.add(light);

    // 4. Object
    const loader = new GLTFLoader();
    let model: any;
    loader.load('/model.glb', (gltf) => {
        model = gltf.scene;
        model.position.set(0, -7, 0);
        model.rotation.set(0, -0.4, 0);
        model.scale.setScalar(0.3);
        gui.addControls('model', model);
        scene.add(model);
    });

    // 5. Rendered
    const renderer = new THREE.WebGLRenderer({ canvas });
    renderer.setSize(window.innerWidth, window.innerHeight);
    renderer.setPixelRatio(window.devicePixelRatio); // For screen with high pixel density
    renderer.render(scene, camera);

    // 6. Add OrbitControls
    const controls = new OrbitControls(camera, renderer.domElement);
    controls.enableDamping = true;
    controls.dampingFactor = 0.01;
    controls.enableZoom = true;
    controls.enablePan = true;

    // 8. Animation
    function animate() {
        requestAnimationFrame(animate);

        controls.update();
        renderer.render(scene, camera);
    }

    //9. Handle window resize
    window.addEventListener('resize', () => {
        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();
        renderer.setSize(window.innerWidth, window.innerHeight);
    });

    animate();
</script>
